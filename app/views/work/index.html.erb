
<div class="secondary_page_bg">
	<div class="category_illustration">
    	<img class="laptop png" src="images/laptop.png" width="379" height="113" alt="About us" />
    	<div class="punchline_work">
        	<h2>Selection of our most appreciated works</h2>
            <p style="color:#BBB;">If you like what you see get in touch with us!</p>
        </div>
    </div>
<!-- .project -->
</div>
<!-- .LATEST_PROJECT -->

<div class="sec_menu">
	<div class="sec_menu_content">
    	<ul class="secondary_menu">
        	<li><span>Portfolio Sample:</span></li>
            <li class="sec_menu_selected">
            	<div class="sec_menu_selected_left"></div>
                <div class="sec_menu_selected_middle">EyeOnMajors.com</div>
                <div class="sec_menu_selected_right"></div>
            </li>
            <!---
            <li><a href="#">RedGrind.com</a></li>
            <li><a href="#">Screencasts</a></li>
            -->
        </ul>
    </div>
    <!-- .sec_menu_content -->
</div>
<!-- .SEC_MENU -->

<div id="contentstretch">
<div id="maincontent">
  <article class="clearfix">
  	<section class="iteminfo post12">
  		<h2>EyeOnMajors.com</h2>
  		<span class="tasks">Design / Development / Automation</span>
  		<blockquote>
  			"We hit the nail on the head with EyeOnMajors combining fantasy golf strategy with simplicity. Having the site on Rails
  			on the Heroku cloud ensures we can grow the site as patrons join in the fun."
  			<p class="quotename">Mark Holton, Co-founder EyeOnMajors.com</p>
  		</blockquote>

  		<div class="projectdescription">
  			<p>
  			  EyeOnMajors is social web application that brings together friends and family to compete among themselves in
  			  fantasy golf.  The goal was to encourage participation by keeping things simple and intuitive.  Likewise
  			  creating the application so it had the ability to expand with different formats was an important criterion.
  			</p>
        <p>
          The site allows users to create multiple groups of friends or officemates, and then select teams of 6 golfers
          per team.  The low aggregate total (golfer score + handicap) is summed to form that teams score.  
        </p>
        <p>
          A key feature to the site is its automated scoring, which crawls the web and extracts golfer scores from a variety 
          of sources, giving users real time updates as the tournament goes on.
        </p>
  		</div>
  	</section>

  	<div class="browser">
  		<div class="topbar"><h3>EyeOnMajors.com</h3></div>
  		<%= image_tag "eyeonmajors_home.png", :alt => "EyeOnMajors Home" %>
  		<span class="bottombar"></span>
  	</div>

  	<div class="browser">
  		<div class="topbar"><h3>EyeOnMajors.com</h3></div>
  		<%= image_tag "eyeonmajors_leaders.png", :alt => "EyeOnMajors leaderboard" %>
      <span class="bottombar"></span>
  	</div>
	
  	<div class="browser">
  		<div class="topbar"><h3>EyeOnMajors.com</h3></div>
  		<%= image_tag "eyeonmajors_admin.png", :alt => "EyeOnMajors admin" %>
  	</div>

  </article>

  
          
</div> <!-- maincontent -->
</div> <!-- contentstretch -->  			
  		<script type="text/javascript">
  			$.fn.stickyfloat = function(options, lockBottom) {
  				var $obj = this;
  				var parentPaddingTop = parseInt($obj.parent().css('padding-top')); //"30px"
  				console.log("-----------------");
  				console.log("parentPaddingTop: ", parentPaddingTop);
          var startOffset = $obj.parent().offset().top; //346
  				console.log("startOffset: ", startOffset);
          var opts = $.extend({ startOffset: startOffset, offsetY: parentPaddingTop, duration: 200, lockBottom:true }, options);

  				$obj.css({ position: 'absolute' });

  				if(opts.lockBottom){
  					var bottomPos = $obj.parent().height() - $obj.height() + parentPaddingTop; //get the maximum scrollTop value
  					if( bottomPos < 0 ){
  					  bottomPos = 0;
  					}
  				}

  				$(window).scroll(function () { 
  					console.log("________________________");
            $obj.stop(); // stop all calculations on scroll event
            
            // check if the window was scrolled down more than the start offset declared.
  					var pastStartOffset			= $(document).scrollTop() > opts.startOffset;	
  					console.log("pastStartOffset: ", pastStartOffset);
  					
  					// check if the object is at it's top position (starting point)
  					var objFartherThanTopPos	= $obj.offset().top > startOffset;	
  					console.log("objFartherThanTopPos: ", objFartherThanTopPos);
            
  					// if the window size is smaller than the Obj size, then do not animate.
  					var objBiggerThanWindow 	= $obj.outerHeight() < $(window).height();	
  					console.log("objBiggerThanWindow: ", objBiggerThanWindow);
            
  					// if window scrolled down more than startOffset OR obj position is greater than
  					// the top position possible (+ offsetY) 
  					// AND window size must be bigger than Obj size
  					if( (pastStartOffset || objFartherThanTopPos) && objBiggerThanWindow ){ 
  						var newpos = ($(document).scrollTop() -startOffset + opts.offsetY );
  						console.log("newpos: ", newpos);
  						if (newpos < 0){ newpos = 0};
  						$obj.animate({ top: newpos }, opts.duration );
  						
  						if ( newpos > bottomPos ){
  							newpos = bottomPos;
  							console.log("newpos > bottomPos: ", newpos);
                console.log("bottomPos: ", bottomPos);
                //$obj.animate({ top: newpos }, opts.duration );
              }
  						if ( $(document).scrollTop() < opts.startOffset )  {
  						// if window scrolled < starting offset, then reset Obj position (opts.offsetY);
  							newpos = parentPaddingTop;
                console.log("reset Obj position: ", newpos);
                console.log("parentPaddingTop: ", parentPaddingTop);
                //$obj.animate({ top: newpos }, opts.duration );
              }
              //$obj.animate({ top: newpos }, opts.duration );
  					}
  					//$obj.animate({ top: newpos }, opts.duration );
  				});
  			};

  			$('section.iteminfo.post12').stickyfloat({ duration: 500 }, true);

  	</script>
  	
  	
